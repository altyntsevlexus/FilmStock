{"version":3,"sources":["components/Nav/Nav.module.css","components/Movie/Movie.module.css","components/FilmsList/ListItem/ListItem.module.css","components/Cast/CastItem/CastItem.module.css","components/Search/Search.module.css","helpers/PreLoader/PreLoader.module.css","components/FilmsList/FilmsList.module.css","components/Cast/Cast.module.css","App.module.css","components/FilmsList/ListItem/ListItem.js","components/FilmsList/FilmsList.js","services/moviesAPI.js","pages/MainPage.js","pages/Cartoons.js","components/Search/Search.js","pages/SearchPage.js","components/Movie/Movie.js","components/Cast/CastItem/CastItem.js","components/Cast/Cast.js","pages/SingleMoviePage.js","components/Nav/Nav.js","helpers/PreLoader/PreLoader.js","App.js","index.js"],"names":["module","exports","ListItem","film","className","styles","poster_path","src","alt","FilmPoster","ListItemOverlay","ItemTitle","title","name","FilmsList","films","map","to","id","BASE_URL","API_KEY","fetchTopMovies","pageNum","fetch","then","response","json","fetchMovieByQuery","query","fetchTopCartoons","override","display","margin","MainPage","state","topFilms","loading","fetchMoreData","page","MoviesAPI","data","setState","results","catch","error","console","log","finally","css","size","color","this","pageStart","loadMore","hasMore","Component","Search","value","onChange","onSubmit","FormStyle","type","placeholder","SearchStyle","Movies","handleChange","e","target","handleSubmit","preventDefault","props","history","push","location","search","qsSearch","queryString","parse","prevProps","length","Movie","overview","image","backdrop_path","release_date","backgroundImage","AboutMovie","MoviePoster","MovieDescriptionBlock","MovieTitle","MovieOverview","MovieAdditionalBlock","replace","CastButton","CastItem","actor","profile_path","ActorPoster","Cast","cast","match","params","movieId","CastList","SingleMoviePage","vote_average","path","component","Nav","Logo","NavBar","NavLink","activeClassName","Selected","PreLoader","PreLoader__image","App","isPreloading","setTimeout","basename","Wrapper","exact","SearchPage","Cartoons","from","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dcf4e4ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Nav_Logo__2Xg3d\",\"blink\":\"Nav_blink__3DC3K\",\"NavBar\":\"Nav_NavBar__3HEw9\",\"Nav\":\"Nav_Nav__C-QAH\",\"Selected\":\"Nav_Selected__2XaE_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MoviePoster\":\"Movie_MoviePoster__1sCLf\",\"MovieAdditionalBlock\":\"Movie_MovieAdditionalBlock__1KJ8X\",\"CastButton\":\"Movie_CastButton__176oe\",\"AboutMovie\":\"Movie_AboutMovie__-VjXj\",\"MovieDescriptionBlock\":\"Movie_MovieDescriptionBlock__pS-ai\",\"MovieTitle\":\"Movie_MovieTitle__13lSl\",\"MovieOverview\":\"Movie_MovieOverview__28jaE\",\"backgroundImage\":\"Movie_backgroundImage__3RpwV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilmPoster\":\"ListItem_FilmPoster__1_Bq7\",\"ListItem\":\"ListItem_ListItem__3g6r0\",\"ListItemOverlay\":\"ListItem_ListItemOverlay__1XODc\",\"ItemTitle\":\"ListItem_ItemTitle__1Mwz3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ActorPoster\":\"CastItem_ActorPoster__2FORk\",\"ListItem\":\"CastItem_ListItem__1Fg_t\",\"ListItemOverlay\":\"CastItem_ListItemOverlay__2YYSl\",\"ItemTitle\":\"CastItem_ItemTitle__2sQAw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchStyle\":\"Search_SearchStyle__3u7we\",\"FormStyle\":\"Search_FormStyle__2ooS8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"PreLoader\":\"PreLoader_PreLoader__29b74\",\"PreLoader__image\":\"PreLoader_PreLoader__image__MEOri\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilmsList\":\"FilmsList_FilmsList__1z1ol\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CastList\":\"Cast_CastList__tv17L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Wrapper\":\"App_Wrapper__3rMlf\"};","import React from 'react'\r\nimport styles from './ListItem.module.css'\r\n\r\nconst ListItem = ({ film }) => {\r\n    return (\r\n        <div className={styles.ListItem}>\r\n            {film.poster_path ? <img src={'https://image.tmdb.org/t/p/w500/' + film.poster_path} alt='poster' className={styles.FilmPoster}>\r\n            </img> : <img src={'https://www.esm.rochester.edu/uploads/NoPhotoAvailable.jpg'} alt='poster' className={styles.FilmPoster}>\r\n                </img>}\r\n            <div className={styles.ListItemOverlay}>\r\n                <div className={styles.ItemTitle}>\r\n                    <p>\r\n                        {film.title ? film.title : film.name}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItem","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './FilmsList.module.css'\r\nimport ListItem from './ListItem/ListItem'\r\n\r\nconst FilmsList = ({ films }) => {\r\n    return (\r\n        <>\r\n            <ul className={styles.FilmsList}>\r\n                {films.map(film => (\r\n                    <li key={film.id}>\r\n                        <Link to={`/movies/${film.id}`}>\r\n                            <ListItem film={film} />\r\n                        </Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FilmsList","const BASE_URL = 'https://api.themoviedb.org/3/'\r\nconst API_KEY = 'api_key=460777d14ead5d0c081ada5f0a1674a7'\r\n\r\nexport const fetchTopMovies = (pageNum) => fetch(BASE_URL + `discover/movie/?language=en-EN&sort_by=popularity.desc&include_adult=true&include_video=false&page=${pageNum}&without_genres=16&` + API_KEY).then(response => response.json())\r\n\r\nexport const fetchMovieById = (id) => fetch(BASE_URL + `movie/${id}?` + API_KEY).then(response => response.json())\r\n\r\nexport const fetchMovieCast = (id) => fetch(BASE_URL + `movie/${id}/credits?` + API_KEY).then(response => response.json())\r\n\r\nexport const fetchMovieByQuery = (query) => fetch(BASE_URL + `search/movie/?query=${query}&` + API_KEY).then(response => response.json())\r\n\r\n//cartoon \r\n\r\nexport const fetchTopCartoons = (id) => fetch(BASE_URL + `discover/movie/?language=en-EN&sort_by=popularity.desc&include_adult=false&include_video=false&page=1&with_genres=16&` + API_KEY).then(response => response.json())\r\n\r\n\r\n//tv shows (serials)\r\nexport const fetchTopSerials = () => fetch(BASE_URL + 'tv/popular?language=en-EN&page=1&' + API_KEY).then(response => response.json())\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport FilmsList from '../components/FilmsList/FilmsList'\r\nimport * as MoviesAPI from '../services/moviesAPI'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\n\r\nconst override = {\r\n    display: 'block',\r\n    margin: '0 auto',\r\n}\r\n\r\n\r\n\r\nexport default class MainPage extends Component {\r\n\r\n\r\n    state = {\r\n        topFilms: [],\r\n        loading: true\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        MoviesAPI.fetchTopMovies().then(data => this.setState({ topFilms: data.results }))\r\n            .catch(error => console.log(error))\r\n            .finally(() => this.setState({\r\n                loading: false\r\n            }))\r\n    }\r\n\r\n\r\n    fetchMoreData = (page) => {\r\n\r\n        MoviesAPI.fetchTopMovies(page).then(data => this.setState({\r\n            topFilms: [...this.state.topFilms, ...data.results]\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ClipLoader\r\n                    css={override}\r\n                    size={50}\r\n                    color={'#FFFF00'}\r\n                    loading={this.state.loading}\r\n                />\r\n                <InfiniteScroll\r\n                    pageStart={0}\r\n                    loadMore={this.fetchMoreData}\r\n                    hasMore={true}\r\n                >\r\n                    <FilmsList films={this.state.topFilms} />\r\n                </InfiniteScroll>\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport FilmsList from '../components/FilmsList/FilmsList'\r\nimport * as MoviesAPI from '../services/moviesAPI'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport InfiniteScroll from 'react-infinite-scroller';\r\n\r\n\r\nconst override = {\r\n    display: 'block',\r\n    margin: '0 auto',\r\n}\r\n\r\nexport default class MainPage extends Component {\r\n    state = {\r\n        topFilms: [],\r\n        loading: true\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        MoviesAPI.fetchTopCartoons().then(data => this.setState({ topFilms: data.results }))\r\n            .catch(error => console.log(error))\r\n            .finally(() => this.setState({\r\n                loading: false\r\n            }))\r\n    }\r\n\r\n    fetchMoreData = (page) => {\r\n\r\n        MoviesAPI.fetchTopCartoons(page).then(data => this.setState({\r\n            topFilms: [...this.state.topFilms, ...data.results]\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ClipLoader\r\n                    css={override}\r\n                    size={50}\r\n                    color={'#FFFF00'}\r\n                    loading={this.state.loading}\r\n                />\r\n                <InfiniteScroll\r\n                    pageStart={0}\r\n                    loadMore={this.fetchMoreData}\r\n                    hasMore={true}\r\n                >\r\n                <FilmsList films={this.state.topFilms} />\r\n                </InfiniteScroll>\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport styles from './Search.module.css'\r\n\r\nconst Search = ({ value, onChange, onSubmit }) => (\r\n    <form onSubmit={onSubmit} className={styles.FormStyle} >\r\n        <input type='text' placeholder='SEARCH' value={value} onChange={onChange} className={styles.SearchStyle}></input>\r\n    </form>\r\n)\r\n\r\nexport default Search","import React, { Component } from 'react'\r\nimport * as MoviesAPI from '../services/moviesAPI'\r\nimport queryString from 'query-string'\r\nimport FilmsList from '../components/FilmsList/FilmsList'\r\nimport Search from '../components/Search/Search'\r\n\r\nclass Movies extends Component {\r\n    state = {\r\n        value: '',\r\n        films: [],\r\n    }\r\n\r\n    handleChange = e => (this.setState({\r\n        value: e.target.value\r\n    }))\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault()\r\n        if (this.state.value) {\r\n            MoviesAPI.fetchMovieByQuery(this.state.value).then(data => this.setState({\r\n                films: data.results\r\n            }))\r\n\r\n            this.props.history.push({\r\n                ...this.props.location,\r\n                search: `search=${this.state.value}`\r\n            })\r\n        }\r\n    }\r\n\r\n    qsSearch = () => queryString.parse(this.props.location.search).search\r\n\r\n    componentDidMount() {\r\n        if (this.qsSearch()) {\r\n            this.setState({\r\n                value: this.qsSearch()\r\n            });\r\n\r\n            MoviesAPI.fetchMovieByQuery(this.qsSearch()).then(data => this.setState({\r\n                films: data.results\r\n            }))\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) { // this is needed for updating when going back and forward in history\r\n        if (this.props.location.search !== prevProps.location.search && this.qsSearch()) {\r\n            this.setState({\r\n                value: this.qsSearch() //changes value\r\n            });\r\n\r\n            MoviesAPI.fetchMovieByQuery(this.qsSearch()).then(data => this.setState({\r\n                films: data.results  //fetchs movies\r\n            }))\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Search value={this.state.value} onSubmit={this.handleSubmit} onChange={this.handleChange} />\r\n                {this.state.films.length > 0 ? <FilmsList films={this.state.films} /> : <p>Search your films</p>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movies","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './Movie.module.css'\r\n\r\n\r\n\r\nconst Movie = ({ title, overview, image, id, backdrop_path, release_date, }) => (\r\n    <>\r\n        <img src={backdrop_path} className={styles.backgroundImage} alt='background' />\r\n        <section className={styles.AboutMovie}>\r\n            <img src={image} alt={title} className={styles.MoviePoster} />\r\n            <div className={styles.MovieDescriptionBlock}>\r\n                <h1 className={styles.MovieTitle}>{title}</h1>\r\n                <p>{release_date}</p>\r\n                <p className={styles.MovieOverview}>{overview}</p>\r\n            </div>\r\n        </section>\r\n        <section className={styles.MovieAdditionalBlock}>\r\n            <Link to={`/movies/${id}/cast`} replace> <button className={styles.CastButton}> Cast </button> </Link>\r\n        </section>\r\n    </>\r\n)\r\nexport default Movie","import React from 'react'\r\nimport styles from './CastItem.module.css'\r\n\r\nconst CastItem = ({ actor }) => {\r\n    return (\r\n        <div className={styles.ListItem}>\r\n            {actor.profile_path ? <img src={'https://image.tmdb.org/t/p/w500/' + actor.profile_path} alt='poster' className={styles.ActorPoster}>\r\n            </img> : <img src={'https://www.esm.rochester.edu/uploads/NoPhotoAvailable.jpg'} alt='poster' className={styles.ActorPoster}>\r\n                </img>}\r\n            <div className={styles.ListItemOverlay}>\r\n                <div className={styles.ItemTitle}>\r\n                    <p>\r\n                        {actor.name}\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CastItem","import React, { Component } from 'react'\r\nimport * as MoviesAPI from '../../services/moviesAPI'\r\nimport CastItem from './CastItem/CastItem'\r\nimport styles from './Cast.module.css'\r\n\r\nclass Cast extends Component {\r\n    state = {\r\n        cast: []\r\n    }\r\n\r\n    componentDidMount() {\r\n        MoviesAPI.fetchMovieCast(this.props.match.params.movieId).then(data => this.setState({\r\n            cast: data.cast\r\n        }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ul className={styles.CastList}>\r\n                {this.state.cast.map(actor => (\r\n                    <li key={actor.id}><CastItem actor={actor} /></li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Cast","import React, { Component, Fragment } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport Movie from '../components/Movie/Movie'\r\nimport Cast from '../components/Cast/Cast'\r\n\r\nimport * as MoviesAPI from '../services/moviesAPI'\r\n\r\n\r\nexport default class SingleMoviePage extends Component {\r\n    state = {\r\n        id: '',\r\n        title: '',\r\n        overview: '',\r\n        image: '',\r\n        backdrop_path: '',\r\n        release_date: '',\r\n        vote_average: '',\r\n    }\r\n\r\n    componentDidMount() {\r\n        MoviesAPI.fetchMovieById(this.props.match.params.movieId)\r\n            .then(data => this.setState({\r\n                title: data.title,\r\n                overview: data.overview,\r\n                image: 'https://image.tmdb.org/t/p/w500' + data.poster_path,\r\n                id: data.id,\r\n                release_date: data.release_date,\r\n                vote_average: data.vote_average * 10,\r\n                backdrop_path: 'https://image.tmdb.org/t/p/w500' + data.backdrop_path,\r\n            }))\r\n    }\r\n\r\n\r\n    render() {\r\n        const { title, overview, image, id, backdrop_path, release_date, vote_average } = this.state\r\n\r\n        return (\r\n            <Fragment>\r\n                <Movie title={title} overview={overview} image={image} id={id} backdrop_path={backdrop_path} release_date={release_date} vote_average={vote_average} />\r\n                <Route path=\"/movies/:movieId/cast\" component={Cast} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport styles from './Nav.module.css'\r\n\r\nconst Nav = () => {\r\n    return (\r\n\r\n        <header>\r\n            <NavLink to=\"/films\" className={styles.Logo}>FilmStock</NavLink>\r\n            <div className={styles.NavBar}>\r\n                <nav className={styles.Nav}>\r\n                    <NavLink to=\"/films\" className={styles.NavLink} activeClassName={styles.Selected}>\r\n                        <p>Films</p>\r\n                    </NavLink>\r\n                    {/* <NavLink to=\"/serials\" className={styles.NavLink} activeClassName={styles.Selected}>\r\n                        <p>Serials</p>\r\n\r\n                    </NavLink> */}\r\n                    <NavLink to=\"/cartoons\" className={styles.NavLink} activeClassName={styles.Selected}>\r\n                        <p>Cartoons</p>\r\n\r\n                    </NavLink>\r\n                    <NavLink to=\"/seacrh\" className={styles.NavLink} activeClassName={styles.Selected}>\r\n                        <p>Search</p>\r\n\r\n                    </NavLink>\r\n                </nav>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n\r\n","import React, { Component } from 'react'\r\nimport styles from './PreLoader.module.css'\r\n\r\nclass PreLoader extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.PreLoader} >\r\n                <img src=\"https://media1.giphy.com/media/2vlmZAD3Kxeta9QxLV/giphy.gif\" className={styles.PreLoader__image}></img>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default PreLoader","import React, { Component } from 'react'\r\nimport { HashRouter, Redirect, Route, Switch } from 'react-router-dom'\r\nimport MainPage from './pages/MainPage'\r\n// import Serials from './pages/Serials'\r\nimport Cartoons from './pages/Cartoons'\r\nimport SearchPage from './pages/SearchPage'\r\nimport SingleMoviePage from './pages/SingleMoviePage'\r\nimport Nav from './components/Nav/Nav'\r\nimport PreLoader from './helpers/PreLoader/PreLoader'\r\n\r\nimport styles from \"./App.module.css\";\r\n\r\nexport default class App extends Component {\r\n\r\n    state = {\r\n        isPreloading: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            isPreloading: true\r\n        })\r\n\r\n        setTimeout(() => this.setState({ isPreloading: false }), 2200)\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <HashRouter basename='/'>\r\n                { this.state.isPreloading ? <PreLoader /> : ''}\r\n                <div className={styles.Wrapper} >\r\n                    <Nav />\r\n                    <Switch>\r\n                        <Route exact path=\"/films\" component={MainPage} />\r\n                        <Route exact path=\"/seacrh\" component={SearchPage} />\r\n                        <Route path=\"/movies/:movieId\" component={SingleMoviePage} />\r\n                        <Route path=\"/cartoons\" component={Cartoons} />\r\n                        <Redirect from='/' to='/films' />\r\n                    </Switch>\r\n                </div >\r\n            </HashRouter>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}